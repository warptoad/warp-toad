"use strict";
/* Autogenerated file, do not edit! */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObsidionDeployerFPCContract = exports.ObsidionDeployerFPCContractArtifact = void 0;
/* eslint-disable */
const aztec_js_1 = require("@aztec/aztec.js");
// @ts-ignore
const obsidion_deployer_fpc_ObsidionDeployerFPC_json_1 = __importDefault(require("./obsidion_deployer_fpc-ObsidionDeployerFPC.json"));
exports.ObsidionDeployerFPCContractArtifact = (0, aztec_js_1.loadContractArtifact)(obsidion_deployer_fpc_ObsidionDeployerFPC_json_1.default);
/**
 * Type-safe interface for contract ObsidionDeployerFPC;
 */
class ObsidionDeployerFPCContract extends aztec_js_1.ContractBase {
    constructor(instance, wallet) {
        super(instance, exports.ObsidionDeployerFPCContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return aztec_js_1.Contract.at(address, ObsidionDeployerFPCContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, signing_pub_key_x, signing_pub_key_y) {
        return new aztec_js_1.DeployMethod(aztec_js_1.PublicKeys.default(), wallet, exports.ObsidionDeployerFPCContractArtifact, ObsidionDeployerFPCContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeys(publicKeys, wallet, signing_pub_key_x, signing_pub_key_y) {
        return new aztec_js_1.DeployMethod(publicKeys, wallet, exports.ObsidionDeployerFPCContractArtifact, ObsidionDeployerFPCContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new aztec_js_1.DeployMethod(opts.publicKeys ?? aztec_js_1.PublicKeys.default(), opts.wallet, exports.ObsidionDeployerFPCContractArtifact, ObsidionDeployerFPCContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return exports.ObsidionDeployerFPCContractArtifact;
    }
    /**
     * Returns this contract's artifact with public bytecode.
     */
    static get artifactForPublic() {
        return (0, aztec_js_1.loadContractArtifactForPublic)(obsidion_deployer_fpc_ObsidionDeployerFPC_json_1.default);
    }
    static get storage() {
        return {
            signing_public_key: {
                slot: new aztec_js_1.Fr(1n),
            }
        };
    }
    static get notes() {
        return {
            PublicKeyNote: {
                id: new aztec_js_1.NoteSelector(0),
            }
        };
    }
}
exports.ObsidionDeployerFPCContract = ObsidionDeployerFPCContract;
