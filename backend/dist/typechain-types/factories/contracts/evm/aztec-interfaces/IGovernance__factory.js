"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IGovernance__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "Timestamp",
                name: "time",
                type: "uint256",
            },
        ],
        name: "ConfigurationUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "depositor",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "onBehalfOf",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Deposit",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "governanceProposer",
                type: "address",
            },
        ],
        name: "GovernanceProposerUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
        ],
        name: "ProposalExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "proposal",
                type: "address",
            },
        ],
        name: "Proposed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "voter",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "support",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "VoteCast",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "withdrawalId",
                type: "uint256",
            },
        ],
        name: "WithdrawFinalised",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "withdrawalId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "WithdrawInitiated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_onBehalfOf",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_proposalId",
                type: "uint256",
            },
        ],
        name: "dropProposal",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_proposalId",
                type: "uint256",
            },
        ],
        name: "execute",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_withdrawalId",
                type: "uint256",
            },
        ],
        name: "finaliseWithdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getConfiguration",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "Timestamp",
                                name: "lockDelay",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "lockAmount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct DataStructures.ProposeConfiguration",
                        name: "proposeConfig",
                        type: "tuple",
                    },
                    {
                        internalType: "Timestamp",
                        name: "votingDelay",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "votingDuration",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "executionDelay",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "gracePeriod",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "quorum",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "voteDifferential",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minimumVotes",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataStructures.Configuration",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_proposalId",
                type: "uint256",
            },
        ],
        name: "getProposal",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "Timestamp",
                                        name: "lockDelay",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lockAmount",
                                        type: "uint256",
                                    },
                                ],
                                internalType: "struct DataStructures.ProposeConfiguration",
                                name: "proposeConfig",
                                type: "tuple",
                            },
                            {
                                internalType: "Timestamp",
                                name: "votingDelay",
                                type: "uint256",
                            },
                            {
                                internalType: "Timestamp",
                                name: "votingDuration",
                                type: "uint256",
                            },
                            {
                                internalType: "Timestamp",
                                name: "executionDelay",
                                type: "uint256",
                            },
                            {
                                internalType: "Timestamp",
                                name: "gracePeriod",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "quorum",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "voteDifferential",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "minimumVotes",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct DataStructures.Configuration",
                        name: "config",
                        type: "tuple",
                    },
                    {
                        internalType: "enum DataStructures.ProposalState",
                        name: "state",
                        type: "uint8",
                    },
                    {
                        internalType: "contract IPayload",
                        name: "payload",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "governanceProposer",
                        type: "address",
                    },
                    {
                        internalType: "Timestamp",
                        name: "creation",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "yea",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "nea",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct DataStructures.Ballot",
                        name: "summedBallot",
                        type: "tuple",
                    },
                ],
                internalType: "struct DataStructures.Proposal",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_proposalId",
                type: "uint256",
            },
        ],
        name: "getProposalState",
        outputs: [
            {
                internalType: "enum DataStructures.ProposalState",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_withdrawalId",
                type: "uint256",
            },
        ],
        name: "getWithdrawal",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "unlocksAt",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "claimed",
                        type: "bool",
                    },
                ],
                internalType: "struct DataStructures.Withdrawal",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "initiateWithdraw",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "powerAt",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IPayload",
                name: "_proposal",
                type: "address",
            },
        ],
        name: "propose",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IPayload",
                name: "_proposal",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
        ],
        name: "proposeWithLock",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "totalPowerAt",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "Timestamp",
                                name: "lockDelay",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "lockAmount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct DataStructures.ProposeConfiguration",
                        name: "proposeConfig",
                        type: "tuple",
                    },
                    {
                        internalType: "Timestamp",
                        name: "votingDelay",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "votingDuration",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "executionDelay",
                        type: "uint256",
                    },
                    {
                        internalType: "Timestamp",
                        name: "gracePeriod",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "quorum",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "voteDifferential",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minimumVotes",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataStructures.Configuration",
                name: "_configuration",
                type: "tuple",
            },
        ],
        name: "updateConfiguration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_governanceProposer",
                type: "address",
            },
        ],
        name: "updateGovernanceProposer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_proposalId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "_support",
                type: "bool",
            },
        ],
        name: "vote",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IGovernance__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IGovernance__factory = IGovernance__factory;
