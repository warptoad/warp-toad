"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IInstance__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "attester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "withdrawer",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Deposit",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "blockNumber",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "archive",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32[]",
                name: "versionedBlobHashes",
                type: "bytes32[]",
            },
        ],
        name: "L2BlockProposed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "blockNumber",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "proverId",
                type: "address",
            },
        ],
        name: "L2ProofVerified",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "manaTarget",
                type: "uint256",
            },
        ],
        name: "ManaTargetUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "provenBlockNumber",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "pendingBlockNumber",
                type: "uint256",
            },
        ],
        name: "PrunedPending",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "attester",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Slashed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "attester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "WithdrawFinalised",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "attester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "WithdrawInitiated",
        type: "event",
    },
    {
        inputs: [],
        name: "L1_BLOCK_AT_GENESIS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "archive",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_blockNumber",
                type: "uint256",
            },
        ],
        name: "archiveAt",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_archive",
                type: "bytes32",
            },
        ],
        name: "canProposeAtTime",
        outputs: [
            {
                internalType: "Slot",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "canPruneAtTime",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "withdrawer",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct CheatDepositArgs[]",
                name: "_args",
                type: "tuple[]",
            },
        ],
        name: "cheat__InitialiseValidatorSet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
            {
                internalType: "Epoch[]",
                name: "_epochs",
                type: "uint256[]",
            },
        ],
        name: "claimProverRewards",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
        ],
        name: "claimSequencerRewards",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
            {
                internalType: "address",
                name: "_proposer",
                type: "address",
            },
            {
                internalType: "address",
                name: "_withdrawer",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
        ],
        name: "finaliseWithdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getActiveAttesterCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getAttesterAtIndex",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAttesters",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_blockNumber",
                type: "uint256",
            },
        ],
        name: "getBlobPublicInputsHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_blockNumber",
                type: "uint256",
            },
        ],
        name: "getBlock",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "archive",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "blockHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "Slot",
                        name: "slotNumber",
                        type: "uint256",
                    },
                ],
                internalType: "struct BlockLog",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBurnAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Epoch",
                name: "_epoch",
                type: "uint256",
            },
        ],
        name: "getCollectiveProverRewardsForEpoch",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "getCommitteeAt",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentEpoch",
        outputs: [
            {
                internalType: "Epoch",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentEpochCommittee",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentProposer",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentSampleSeed",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentSlot",
        outputs: [
            {
                internalType: "Slot",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "getEpochAt",
        outputs: [
            {
                internalType: "Epoch",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Slot",
                name: "_slotNumber",
                type: "uint256",
            },
        ],
        name: "getEpochAtSlot",
        outputs: [
            {
                internalType: "Epoch",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Epoch",
                name: "_epoch",
                type: "uint256",
            },
        ],
        name: "getEpochCommittee",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getEpochDuration",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_blockNumber",
                type: "uint256",
            },
        ],
        name: "getEpochForBlock",
        outputs: [
            {
                internalType: "Epoch",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_start",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_end",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "previousArchive",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "endArchive",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "previousBlockHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "endBlockHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "Timestamp",
                        name: "endTimestamp",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "outHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "proverId",
                        type: "address",
                    },
                ],
                internalType: "struct PublicInputArgs",
                name: "_args",
                type: "tuple",
            },
            {
                internalType: "bytes32[]",
                name: "_fees",
                type: "bytes32[]",
            },
            {
                internalType: "bytes",
                name: "_blobPublicInputs",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_aggregationObject",
                type: "bytes",
            },
        ],
        name: "getEpochProofPublicInputs",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
        ],
        name: "getExit",
        outputs: [
            {
                components: [
                    {
                        internalType: "Timestamp",
                        name: "exitableAt",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                ],
                internalType: "struct Exit",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getExitDelay",
        outputs: [
            {
                internalType: "Timestamp",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFeeAsset",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFeeAssetPerEth",
        outputs: [
            {
                internalType: "FeeAssetPerEthE9",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFeeAssetPortal",
        outputs: [
            {
                internalType: "contract IFeeJuicePortal",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_blockNumber",
                type: "uint256",
            },
        ],
        name: "getFeeHeader",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "excessMana",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "manaUsed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "feeAssetPriceNumerator",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "congestionCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "provingCost",
                        type: "uint256",
                    },
                ],
                internalType: "struct FeeHeader",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getGenesisTime",
        outputs: [
            {
                internalType: "Timestamp",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Epoch",
                name: "_epoch",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_length",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_prover",
                type: "address",
            },
        ],
        name: "getHasSubmitted",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getInbox",
        outputs: [
            {
                internalType: "contract IInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
        ],
        name: "getInfo",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "stake",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "withdrawer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "enum Status",
                        name: "status",
                        type: "uint8",
                    },
                ],
                internalType: "struct ValidatorInfo",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_timestamp",
                type: "uint256",
            },
        ],
        name: "getL1FeesAt",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "baseFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "blobFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct L1FeeData",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "_inFeeAsset",
                type: "bool",
            },
        ],
        name: "getManaBaseFeeAt",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "_inFeeAsset",
                type: "bool",
            },
        ],
        name: "getManaBaseFeeComponentsAt",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "congestionCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "congestionMultiplier",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "dataCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gasCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "provingCost",
                        type: "uint256",
                    },
                ],
                internalType: "struct ManaBaseFeeComponents",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getManaLimit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getManaTarget",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getMinimumStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getOperatorAtIndex",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                ],
                internalType: "struct OperatorInfo",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getOutbox",
        outputs: [
            {
                internalType: "contract IOutbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPendingBlockNumber",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProofSubmissionWindow",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "getProposerAt",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getProposerAtIndex",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
        ],
        name: "getProposerForAttester",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProvenBlockNumber",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProvingCostPerManaInEth",
        outputs: [
            {
                internalType: "EthValue",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProvingCostPerManaInFeeAsset",
        outputs: [
            {
                internalType: "FeeAssetValue",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getRewardDistributor",
        outputs: [
            {
                internalType: "contract IRewardDistributor",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "getSampleSeedAt",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sequencer",
                type: "address",
            },
        ],
        name: "getSequencerRewards",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSlasher",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Timestamp",
                name: "_ts",
                type: "uint256",
            },
        ],
        name: "getSlotAt",
        outputs: [
            {
                internalType: "Slot",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSlotDuration",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Epoch",
                name: "_epoch",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_prover",
                type: "address",
            },
        ],
        name: "getSpecificProverRewardsForEpoch",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getStakingAsset",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getTargetCommitteeSize",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Slot",
                name: "_slotNumber",
                type: "uint256",
            },
        ],
        name: "getTimestampForSlot",
        outputs: [
            {
                internalType: "Timestamp",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getTips",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "pendingBlockNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "provenBlockNumber",
                        type: "uint256",
                    },
                ],
                internalType: "struct ChainTips",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getVersion",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
            {
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
        ],
        name: "initiateWithdraw",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "archive",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "blockHash",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "feeAssetPriceModifier",
                                type: "int256",
                            },
                        ],
                        internalType: "struct OracleInput",
                        name: "oracleInput",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes",
                        name: "header",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "txHashes",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct ProposeArgs",
                name: "_args",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isEmpty",
                        type: "bool",
                    },
                    {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Signature[]",
                name: "_signatures",
                type: "tuple[]",
            },
            {
                internalType: "bytes",
                name: "_blobInput",
                type: "bytes",
            },
        ],
        name: "propose",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "prune",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_verifier",
                type: "address",
            },
        ],
        name: "setEpochVerifier",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_protocolContractTreeRoot",
                type: "bytes32",
            },
        ],
        name: "setProtocolContractTreeRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "EthValue",
                name: "_provingCostPerMana",
                type: "uint256",
            },
        ],
        name: "setProvingCostPerMana",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_vkTreeRoot",
                type: "bytes32",
            },
        ],
        name: "setVkTreeRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "setupEpoch",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_attester",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "slash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_myHeaderBlockNumber",
                type: "uint256",
            },
        ],
        name: "status",
        outputs: [
            {
                internalType: "uint256",
                name: "provenBlockNumber",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "provenArchive",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "pendingBlockNumber",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "pendingArchive",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "archiveOfMyBlock",
                type: "bytes32",
            },
            {
                internalType: "Epoch",
                name: "provenEpochNumber",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "start",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "end",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes32",
                                name: "previousArchive",
                                type: "bytes32",
                            },
                            {
                                internalType: "bytes32",
                                name: "endArchive",
                                type: "bytes32",
                            },
                            {
                                internalType: "bytes32",
                                name: "previousBlockHash",
                                type: "bytes32",
                            },
                            {
                                internalType: "bytes32",
                                name: "endBlockHash",
                                type: "bytes32",
                            },
                            {
                                internalType: "Timestamp",
                                name: "endTimestamp",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "outHash",
                                type: "bytes32",
                            },
                            {
                                internalType: "address",
                                name: "proverId",
                                type: "address",
                            },
                        ],
                        internalType: "struct PublicInputArgs",
                        name: "args",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "fees",
                        type: "bytes32[]",
                    },
                    {
                        internalType: "bytes",
                        name: "blobPublicInputs",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "aggregationObject",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "proof",
                        type: "bytes",
                    },
                ],
                internalType: "struct SubmitEpochRootProofArgs",
                name: "_args",
                type: "tuple",
            },
        ],
        name: "submitEpochRootProof",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "updateL1GasFeeOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_manaTarget",
                type: "uint256",
            },
        ],
        name: "updateManaTarget",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_blobsInputs",
                type: "bytes",
            },
        ],
        name: "validateBlobs",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "",
                type: "bytes32[]",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_header",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isEmpty",
                        type: "bool",
                    },
                    {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Signature[]",
                name: "_signatures",
                type: "tuple[]",
            },
            {
                internalType: "bytes32",
                name: "_digest",
                type: "bytes32",
            },
            {
                internalType: "Timestamp",
                name: "_currentTime",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_blobsHash",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "ignoreDA",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "ignoreSignatures",
                        type: "bool",
                    },
                ],
                internalType: "struct BlockHeaderValidationFlags",
                name: "_flags",
                type: "tuple",
            },
        ],
        name: "validateHeader",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IInstance__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IInstance__factory = IInstance__factory;
