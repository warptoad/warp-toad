"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ITestRollup__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "manaTarget",
                type: "uint256",
            },
        ],
        name: "ManaTargetUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "withdrawer",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct CheatDepositArgs[]",
                name: "_args",
                type: "tuple[]",
            },
        ],
        name: "cheat__InitialiseValidatorSet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_verifier",
                type: "address",
            },
        ],
        name: "setEpochVerifier",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_protocolContractTreeRoot",
                type: "bytes32",
            },
        ],
        name: "setProtocolContractTreeRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_vkTreeRoot",
                type: "bytes32",
            },
        ],
        name: "setVkTreeRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_manaTarget",
                type: "uint256",
            },
        ],
        name: "updateManaTarget",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class ITestRollup__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ITestRollup__factory = ITestRollup__factory;
