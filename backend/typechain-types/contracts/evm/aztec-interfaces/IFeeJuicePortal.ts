/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface IFeeJuicePortalInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "INBOX"
      | "L2_TOKEN_ADDRESS"
      | "ROLLUP"
      | "UNDERLYING"
      | "VERSION"
      | "depositToAztecPublic"
      | "distributeFees"
      | "initialize"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "DepositToAztecPublic" | "FeesDistributed"
  ): EventFragment;

  encodeFunctionData(functionFragment: "INBOX", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "L2_TOKEN_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ROLLUP", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "UNDERLYING",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "VERSION", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "depositToAztecPublic",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "distributeFees",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "INBOX", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "L2_TOKEN_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ROLLUP", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "UNDERLYING", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "VERSION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositToAztecPublic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "distributeFees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
}

export namespace DepositToAztecPublicEvent {
  export type InputTuple = [
    to: BytesLike,
    amount: BigNumberish,
    secretHash: BytesLike,
    key: BytesLike,
    index: BigNumberish
  ];
  export type OutputTuple = [
    to: string,
    amount: bigint,
    secretHash: string,
    key: string,
    index: bigint
  ];
  export interface OutputObject {
    to: string;
    amount: bigint;
    secretHash: string;
    key: string;
    index: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace FeesDistributedEvent {
  export type InputTuple = [to: AddressLike, amount: BigNumberish];
  export type OutputTuple = [to: string, amount: bigint];
  export interface OutputObject {
    to: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IFeeJuicePortal extends BaseContract {
  connect(runner?: ContractRunner | null): IFeeJuicePortal;
  waitForDeployment(): Promise<this>;

  interface: IFeeJuicePortalInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  INBOX: TypedContractMethod<[], [string], "view">;

  L2_TOKEN_ADDRESS: TypedContractMethod<[], [string], "view">;

  ROLLUP: TypedContractMethod<[], [string], "view">;

  UNDERLYING: TypedContractMethod<[], [string], "view">;

  VERSION: TypedContractMethod<[], [bigint], "view">;

  depositToAztecPublic: TypedContractMethod<
    [_to: BytesLike, _amount: BigNumberish, _secretHash: BytesLike],
    [[string, bigint]],
    "nonpayable"
  >;

  distributeFees: TypedContractMethod<
    [_to: AddressLike, _amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  initialize: TypedContractMethod<[], [void], "nonpayable">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "INBOX"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "L2_TOKEN_ADDRESS"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ROLLUP"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "UNDERLYING"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "VERSION"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "depositToAztecPublic"
  ): TypedContractMethod<
    [_to: BytesLike, _amount: BigNumberish, _secretHash: BytesLike],
    [[string, bigint]],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "distributeFees"
  ): TypedContractMethod<
    [_to: AddressLike, _amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<[], [void], "nonpayable">;

  getEvent(
    key: "DepositToAztecPublic"
  ): TypedContractEvent<
    DepositToAztecPublicEvent.InputTuple,
    DepositToAztecPublicEvent.OutputTuple,
    DepositToAztecPublicEvent.OutputObject
  >;
  getEvent(
    key: "FeesDistributed"
  ): TypedContractEvent<
    FeesDistributedEvent.InputTuple,
    FeesDistributedEvent.OutputTuple,
    FeesDistributedEvent.OutputObject
  >;

  filters: {
    "DepositToAztecPublic(bytes32,uint256,bytes32,bytes32,uint256)": TypedContractEvent<
      DepositToAztecPublicEvent.InputTuple,
      DepositToAztecPublicEvent.OutputTuple,
      DepositToAztecPublicEvent.OutputObject
    >;
    DepositToAztecPublic: TypedContractEvent<
      DepositToAztecPublicEvent.InputTuple,
      DepositToAztecPublicEvent.OutputTuple,
      DepositToAztecPublicEvent.OutputObject
    >;

    "FeesDistributed(address,uint256)": TypedContractEvent<
      FeesDistributedEvent.InputTuple,
      FeesDistributedEvent.OutputTuple,
      FeesDistributedEvent.OutputObject
    >;
    FeesDistributed: TypedContractEvent<
      FeesDistributedEvent.InputTuple,
      FeesDistributedEvent.OutputTuple,
      FeesDistributedEvent.OutputObject
    >;
  };
}
