/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPayload,
  IPayloadInterface,
} from "../../../../contracts/evm/aztec-interfaces/IPayload";

const _abi = [
  {
    inputs: [],
    name: "getActions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IPayload.Action[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPayload__factory {
  static readonly abi = _abi;
  static createInterface(): IPayloadInterface {
    return new Interface(_abi) as IPayloadInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPayload {
    return new Contract(address, _abi, runner) as unknown as IPayload;
  }
}
