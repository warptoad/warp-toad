/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWarpToadCore,
  IWarpToadCoreInterface,
} from "../../../../contracts/evm/interfaces/IWarpToadCore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gigaRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_localRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priorityFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "_formatPublicInputs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_preCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gigaRootProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1BridgeAdapter",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gigaRoot",
        type: "uint256",
      },
    ],
    name: "isValidGigaRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_localRoot",
        type: "uint256",
      },
    ],
    name: "isValidLocalRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gigaRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_localRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priorityFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_poof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "storeLocalRootInHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IWarpToadCore__factory {
  static readonly abi = _abi;
  static createInterface(): IWarpToadCoreInterface {
    return new Interface(_abi) as IWarpToadCoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWarpToadCore {
    return new Contract(address, _abi, runner) as unknown as IWarpToadCore;
  }
}
